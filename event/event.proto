syntax = "proto3";

package event;

import "empty.proto";

option go_package = "github.com/Zaba505/eventproc/event";

// the content of an Event could be anything.
message Event {
  enum Type {
    HELLO = 0;
  }

  Type type = 1;
  string payload = 2;
}

// EventSink is the gRPC service a client calls
service EventSink {
  rpc ProcessEvent (EventRequest) returns (EventResponse);
}

message EventRequest {
  Event event = 1;
}

message EventResponse {
  oneof body {
    // optional response event content
    Event event = 2;

    // tell client that the request event was consumed and no response
    // event will be returned.
    google.protobuf.Empty eventConsumed = 3;
  }
}

// EventProcessor represent a gRPC service which can process Event messages.
service EventProcessor {
  rpc ProcessEvents (stream ProcessorRequest) returns (stream ProcessorResponse);
}

message ProcessorRequest {
  // id is used by EventSink to map responses to requests
  string id = 1;

  // event payload received from EventSink which needs to be processed
  Event event = 2;
}

message ProcessorResponse {
  // id is used by EventSink to map responses to requests
  string id = 1;

  EventResponse response = 2;
}
